# -*- coding: utf-8 -*-
"""02_Mean_Squared_Error_실습.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oX5Z_ZSY777TiTUgDiLTHOxTFrvuH3pv
"""

#-*- coding: utf-8 -*-

import numpy as np

#가상의 기울기 a와 y 절편 b
fake_a_b=[3,76]

# x 값과 y값
data = [[2, 81], [4, 93], [6, 91], [8, 97]]  # 이중 index 활용
x = [i[0] for i in data]
y = [i[1] for i in data]

print(x)
print(y)

# 예측값 (y = ax + b)
def predict(x):
  return fake_a_b[0] * x + fake_a_b[1]

# MSE 함수 공식
def mse(y, y_hat):
  return ((y - y_hat) ** 2).mean()

# 임의의 직선(a = 3, b = 76)의 MSE
def mse_val(y, predict_result):
  return mse(np.array(y), np.array(predict_result))

# 예측값 넣을 빈 리스트
predict_result = []

# x값 대입해서 predict_result 채우기
for i in range(len(x)):
  predict_result.append(predict(x[i]))
  print(f"공부시간={x[i]}, 실제점수={y[i]}, 예측점수={predict(x[i])}")

# MSE 최종값
print("MSE 최종값 : " + str(mse_val(y, predict_result)))